public protocol SimpleProtocol { }
public struct SimpleProtocolUser: SimpleProtocol { }
@Builder
public class SimpleObject: Buildable {
    var id: UUID?
    var name: String?
    var protocolUser: (any SimpleProtocol)?
    let numberOfStuff: Int

    public init(numberOfStuff: Int, id: UUID? = nil, name: String? = nil, protocolUser: SimpleProtocol?) {
        self.numberOfStuff = numberOfStuff
        self.id = id
        self.name = name
        self.protocolUser = protocolUser
    }

    public static func validate(_ container: [BuildableContainerProperties : Any]) -> Bool {
        true
    }

    public static func build(_ container: [BuildableContainerProperties : Any]) -> SimpleObject {
        SimpleObject(id: container[.id] as? UUID, name: container[.name] as? String)
    }
}
